<?xml version="1.0"?>
<project name="keyjoy" default="jar" xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- Project-specific configuration -->
  <loadproperties srcfile="project.properties"/>
  <property name="main.class" value="${package.main}.Launcher"/>
  <property name="base.name" value="${artifactId}-${version}"/>

  <!-- Standard Directory Layout -->
  <property name="src.dir" value="src"/>
  <property name="test.dir" value="test"/>
  <property name="build.dir" value="build"/>
  <property name="dist.dir" value="dist"/>

  <!-- Targets -->

  <target name="resolve" description="Retrieve dependencies with Ivy.">
    <ivy:resolve log="quiet"/>
    <ivy:cachepath conf="build" pathid="build.classpath"/>
    <ivy:cachepath conf="default" pathid="runtime.classpath"/>
    <ivy:cachefileset conf="default" setid="runtime.fileset"/>
    <ivy:cachepath conf="test" pathid="test.classpath"/>
  </target>

  <target name="compile" depends="resolve" description="Compile all sources.">
    <mkdir dir="${build.dir}/classes"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}/classes"
           optimize="on" debug="on" deprecation="on" includeantruntime="no">
      <compilerarg value="-Xlint"/>
      <classpath refid="build.classpath"/>
    </javac>
    <copy todir="${build.dir}/classes">
      <fileset dir="${src.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="jar" depends="compile"
          description="Generate the jarfile distributable.">
    <jar destfile="${dist.dir}/${base.name}.jar"
         basedir="${build.dir}/classes">
      <manifest>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
    <jar destfile="${dist.dir}/${base.name}-all.jar"
         basedir="${build.dir}/classes">
      <zipgroupfileset refid="runtime.fileset"/>
      <manifest>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="compile" description="Run the application.">
    <java classname="${main.class}" classpath="${build.dir}/classes"
          fork="true">
      <classpath refid="build.classpath"/>
      <arg value="--name"/>
      <arg value="Java"/>
    </java>
  </target>

  <target name="clean" description="Delete all generated files.">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${lib.dir}"/>
    <delete file="cache.properties"/>
  </target>

  <target name="javadoc" depends="resolve,compile"
          description="Generate documentation.">
    <taskdef classname="lombok.delombok.ant.DelombokTask" name="delombok"
             classpathref="build.classpath"/>
    <delombok verbose="true" to="${build.dir}/src" from="${src.dir}">
      <classpath refid="build.classpath"/>
    </delombok>
    <javadoc destdir="${dist.dir}/javadoc"
             link="http://download.oracle.com/javase/6/docs/api/"
             sourcepath="${build.dir}/src"
             Doctitle="${ant.project.name} ${version}"
             Windowtitle="${ant.project.name} ${version}">
      <classpath refid="build.classpath"/>
    </javadoc>
  </target>

  <target name="check" depends="resolve">
    <taskdef resource="checkstyletask.properties"
             classpathref="build.classpath"/>
    <checkstyle config="checkstyle.xml">
      <fileset dir="${src.dir}" includes="**/*.java"/>
      <classpath path="${build.dir}/classes"/>
    </checkstyle>
  </target>
</project>
